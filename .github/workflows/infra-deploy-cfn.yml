name: Deploy CFn Stack

on:
  push:
    branches: [ main ]
    paths:
      - 'infra/**'
  pull_request:
    branches: [ main ]
    paths:
      - 'infra/**'

permissions:
  id-token: write
  contents: read
  packages: read

env:
  WORKING_DIRECTORY: infra/
  REGION_NAME: ap-northeast-1
  YAML_NAME: main-template.yml
  STACK_NAME: infra-cfn

jobs:
  deploy-cfn:
    name: Deploy CFn Stack to AWS
    runs-on: ubuntu-latest
    steps:

    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    - name: Check how many templates changed
      id: templates
      run: |
        changed_templates=$(git diff HEAD^ --name-only | grep -c ${{ env.WORKING_DIRECTORY }}/)
        echo changed_templates=$changed_templates >> "$GITHUB_OUTPUT"
 
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: 'arn:aws:iam::209746572579:role/tnogi-admin'
        aws-region: ap-northeast-1

    - name: Copy files to the s3 bucket
      env:
        BUCKET_NAME: cf-templates-tnogi-dev-ap-northeast-1
      run: |
        aws s3 sync ./infra s3://${BUCKET_NAME}

    - name: Change Set ID Get ${{env.YAML_NAME}}
      run: >
        echo "CHANGESETID=$(aws cloudformation list-change-sets --stack-name ${{env.STACK_NAME}} --output yaml | 
        grep changeSet/GitHubActions-${{env.CURRENT_DATETIME}} | 
        awk '{print $3}')"  >> ${GITHUB_ENV}

    - name: Change Set Check ${{env.YAML_NAME}}
      run: |
        while true Hub Actionsを再実行した場合にはデプロイを実行
    - name: Cfn Deploy ${{env.YAML_NAME}}
      if: env.RUN_NO != '1'  && env.STATUS == 'CREATE_COMPLETE'
      run: aws cloudformation execute-change-set --change-set-name ${{env.CHANGESETID}}

    - name: Cfn Deploy Check ${{env.YAML_NAME}}
      if: env.RUN_NO != '1'  && env.STATUS == 'CREATE_COMPLETE'
      run: aws cloudformation wait stack-update-complete --stack-name ${{env.STACK_NAME}}
