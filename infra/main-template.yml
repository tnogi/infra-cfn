AWSTemplateFormatVersion: "2010-09-09"
# https://dev.classmethod.jp/articles/getting-started-amazon-eks-with-eksctl/

Parameters:
  CidrBlockVPC:
    Type: String
    Default: 192.168.0.0/16
  AllowIP:
    Type: String
    Default: 0.0.0.0/0
  KeyName:
    Description: The EC2 Key Pair to allow SSH access to the instance
    Type: AWS::EC2::KeyPair::KeyName
    Default: '***'
  IAMServiceArn:
    Type: String
    Default: '***'

Resources:
  VPC:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://***/vpc-template.yml
      Parameters:
        CidrBlockVPC: !Ref CidrBlockVPC

  MongoDB:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://***/ec2-template.yml
      Parameters:
        AllowIP: !Ref AllowIP
        VPC: !GetAtt VPC.Outputs.VPC
        PublicSubnet1: !GetAtt VPC.Outputs.PublicSubnet1Id
        InstanceType: t2.large
        VPCCIDR: !Ref CidrBlockVPC
        KeyName: !Ref KeyName

  k8sBastion:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://***/k8s-bastion-template.yml
      Parameters:
        VPC: !GetAtt VPC.Outputs.VPC
        PublicSubnet1: !GetAtt VPC.Outputs.PublicSubnet1Id
        PublicSubnet2: !GetAtt VPC.Outputs.PublicSubnet2Id
        PublicSubnet3: !GetAtt VPC.Outputs.PublicSubnet3Id
        PrivateSubnet1: !GetAtt VPC.Outputs.PrivateSubnet1Id
        PrivateSubnet2: !GetAtt VPC.Outputs.PrivateSubnet2Id
        PrivateSubnet3: !GetAtt VPC.Outputs.PrivateSubnet3Id
        InstanceType: t2.large
        VPCCIDR: !Ref CidrBlockVPC
        ClusterName: k8s-app
        IAMServiceArn: !Ref IAMServiceArn

Outputs:
  MongoDBPublicIp:
    Description: MongoDB's public Ip address
    Value: !GetAtt MongoDB.Outputs.MongoDBPublicIp
  BackupS3Url:
    Description: Backup stored S3 link
    Value: !GetAtt MongoDB.Outputs.BackupS3Url
